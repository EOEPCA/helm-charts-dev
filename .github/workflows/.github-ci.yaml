name: Build, Scan, and Publish Helm Chart

on:
  push:
    branches:
      - develop
  workflow_dispatch:

env:
  CHART_PATH: charts/application-hub
  HELM_EXPERIMENTAL_OCI: 1

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      chart_package: ${{ steps.vars.outputs.chart_package }}
      chart_name: ${{ steps.vars.outputs.chart_name }}
      chart_version: ${{ steps.vars.outputs.chart_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Extract chart variables
        id: vars
        run: |
          CHART_NAME=$(grep '^name:' $CHART_PATH/Chart.yaml | awk '{print $2}')
          CHART_VERSION=$(grep '^version:' $CHART_PATH/Chart.yaml | awk '{print $2}')
          CHART_PACKAGE="${CHART_NAME}-${CHART_VERSION}.tgz"
          echo "chart_name=$CHART_NAME" >> $GITHUB_OUTPUT
          echo "chart_version=$CHART_VERSION" >> $GITHUB_OUTPUT
          echo "chart_package=$CHART_PACKAGE" >> $GITHUB_OUTPUT

      - name: Lint and package chart
        run: |
          helm lint $CHART_PATH
          helm dependency update $CHART_PATH || true
          helm package $CHART_PATH --destination .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: chart
          path: ./*.tgz

  scan:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download chart
        uses: actions/download-artifact@v4
        with:
          name: chart

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: ${{ env.CHART_PATH }}
          severity: HIGH,CRITICAL
          exit-code: 1

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download chart
        uses: actions/download-artifact@v4
        with:
          name: chart

      - name: Install Helm and plugin
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm plugin install https://github.com/chartmuseum/helm-push

      - name: Push to cr.terradue.com
        run: |
          CHART_NAME=${{ needs.build.outputs.chart_name }}
          CHART_VERSION=${{ needs.build.outputs.chart_version }}
          CHART_PACKAGE=${{ needs.build.outputs.chart_package }}

          echo "${{ secrets.CR_PASSWORD }}" | helm registry login --username "${{ secrets.CR_USERNAME }}" --password-stdin https://cr.terradue.com
          helm cm-push $CHART_PACKAGE https://cr.terradue.com/chartrepo/${{ secrets.CR_REPO }} \
            --username "${{ secrets.CR_USERNAME }}" \
            --password "${{ secrets.CR_PASSWORD }}"

      - name: Push to GHCR
        run: |
          CHART_NAME=${{ needs.build.outputs.chart_name }}
          CHART_VERSION=${{ needs.build.outputs.chart_version }}

          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
          helm chart save $CHART_PATH ghcr.io/eoepca/$CHART_NAME:$CHART_VERSION
          helm chart push ghcr.io/eoepca/$CHART_NAME:$CHART_VERSION
