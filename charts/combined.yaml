---
# Source: resource-guard/charts/uma-user-agent/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dummy-service-guard-uma-user-agent
  labels:
    helm.sh/chart: uma-user-agent-0.0.12
    app.kubernetes.io/name: uma-user-agent
    app.kubernetes.io/instance: dummy-service-guard
    app.kubernetes.io/version: "0.0.7"
    app.kubernetes.io/managed-by: Helm
---
# Source: resource-guard/charts/pep-engine/templates/pep-cm.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: dummy-service-pep-cm
data:
  PEP_REALM: "eoepca"
  PEP_AUTH_SERVER_URL: https://test.demo.eoepca.org
  PEP_SERVICE_HOST: "0.0.0.0"
  PEP_SERVICE_PORT: "5566"
  PEP_S_MARGIN_RPT_VALID: "5"
  PEP_CHECK_SSL_CERTS: "'false'"
  PEP_USE_THREADS: "'true'"
  PEP_DEBUG_MODE: "'true'"
  PEP_RESOURCE_SERVER_ENDPOINT: "http://dummy-service:80/"
  PEP_API_RPT_UMA_VALIDATION: "'true'"
  PEP_RPT_LIMIT_USES: "1"
  PEP_PDP_URL: http://test.demo.eoepca.org
  PEP_PDP_PORT: "5567"
  PEP_PDP_POLICY_ENDPOINT: "/pdp/policy/"
  PEP_VERIFY_SIGNATURE: "'false'"
  PEP_PROXY_SERVICE_PORT: "5566"
  PEP_RESOURCES_SERVICE_PORT: "5576"
  PEP_DEFAULT_RESOURCE_PATH: "/data/default-resources.json"
  PEP_WORKING_MODE: "PARTIAL"
---
# Source: resource-guard/charts/pep-engine/templates/pep-cm.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-resources  
data:
  
  default-resources.json: "{\n  \"default_resources\": [\n    {\"name\": \"Base Path\", \"description\": \"Base path for Open Access to PEP\", \"resource_uri\": \"/\", \"scopes\": [\"public_access\"], \"default_owner\": \"0000000000000\"}\n\n  ]\n}\n"
---
# Source: resource-guard/charts/pep-engine/templates/pep-service.yml
apiVersion: v1
kind: Service
metadata:
  name: dummy-service-pep
  labels:
    app: dummy-service-pep
spec:
  ports:
    - port: 5566
      targetPort: 5566
      protocol: TCP
      name: proxy-pep
    - port: 5576
      targetPort: 5576
      protocol: TCP
      name: resources-pep
  selector:
    app: dummy-service-pep
---
# Source: resource-guard/charts/uma-user-agent/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dummy-service-guard-uma-user-agent
  labels:
    helm.sh/chart: uma-user-agent-0.0.12
    app.kubernetes.io/name: uma-user-agent
    app.kubernetes.io/instance: dummy-service-guard
    app.kubernetes.io/version: "0.0.7"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: uma-user-agent
    app.kubernetes.io/instance: dummy-service-guard
---
# Source: resource-guard/charts/pep-engine/templates/pep-deployment.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-service-pep
  labels:
    app: dummy-service-pep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dummy-service-pep
  template:
    metadata:
      labels:
        app: dummy-service-pep
    spec:
      containers:
      - name: dummy-service-pep
        imagePullPolicy: IfNotPresent
        image: "eoepca/um-pep-engine:task415_3"
        resources:
          requests:
            memory: 50Mi
            cpu: 2m
        livenessProbe:
          tcpSocket:
            port: 5566
          initialDelaySeconds: 1
          periodSeconds: 1
        readinessProbe:
          tcpSocket:
            port: 5566
          initialDelaySeconds: 1
          periodSeconds: 1
        ports:
        - containerPort: 5566
          name: proxy-pep
          protocol: TCP
        - containerPort: 5576
          name: resources-pep
          protocol: TCP
        envFrom:
        - configMapRef:
            name: dummy-service-pep-cm
        volumeMounts:
        - name: default-resources
          mountPath: /data/
      - name: mongo
        imagePullPolicy: IfNotPresent
        image: mongo
        resources:
          requests:
            memory: 150Mi
            cpu: 3m
        ports:
        - name: http-rp
          containerPort: 27017
          protocol: TCP
        envFrom:
        - configMapRef:
            name: dummy-service-pep-cm
        volumeMounts:
        - mountPath: /data/db/
          subPath: dummy-service-pep/dummy-service/data/db
          name: dummy-service-pep-pvc
      hostAliases:
      - ip: 185.52.195.19
        hostnames:
        - test.demo.eoepca.org
      volumes:
        - name: dummy-service-pep-pvc
          persistentVolumeClaim:
            claimName: dummy-service-pep-pvc
        - name: default-resources
          configMap:
            name: custom-resources
---
# Source: resource-guard/charts/uma-user-agent/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dummy-service-guard-uma-user-agent
  labels:
    helm.sh/chart: uma-user-agent-0.0.12
    app.kubernetes.io/name: uma-user-agent
    app.kubernetes.io/instance: dummy-service-guard
    app.kubernetes.io/version: "0.0.7"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: uma-user-agent
      app.kubernetes.io/instance: dummy-service-guard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: uma-user-agent
        app.kubernetes.io/instance: dummy-service-guard
    spec:
      serviceAccountName: dummy-service-guard-uma-user-agent
      securityContext:
        {}
      containers:
        - name: uma-user-agent
          securityContext:
            {}
          image: "eoepca/uma-user-agent:0.0.7"
          imagePullPolicy: IfNotPresent
          env:
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: dummy-service-guard-uma-user-agent
                  key: client-id
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: dummy-service-guard-uma-user-agent
                  key: client-secret
            - name: HTTP_TIMEOUT
              value: "10"
            - name: LOG_LEVEL
              value: "info"
            - name: PEP_URL
              value: "http://pep/"
            - name: PORT
              value: "80"
            - name: USER_ID_COOKIE_NAME
              value: "auth_user_id"
            - name: UNAUTHORIZED_RESPONSE
              value: ""
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /status/alive
              port: http
          readinessProbe:
            httpGet:
              path: /status/ready
              port: http
          resources:
            {}
---
# Source: resource-guard/charts/pep-engine/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dummy-service-pep
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "dummy-service-pep.test.demo.eoepca.org"
    http:
      paths:
      - path: /
        backend:
          serviceName: dummy-service-pep
          servicePort: 5566
  tls:
    - hosts:
        - "dummy-service.test.demo.eoepca.org"
      secretName: "dummy-service-pep-tls"
---
# Source: resource-guard/charts/pep-engine/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dummy-service-pepapi
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: "dummy-service-pepapi.test.demo.eoepca.org"
    http:
      paths:
      - path: /
        backend:
          serviceName: dummy-service-pep
          servicePort: 5576
---
# Source: resource-guard/charts/pep-engine/templates/ingress.yaml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dummy-service-auth
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/configuration-snippet: |
      auth_request /authcheck;
    nginx.ingress.kubernetes.io/server-snippet: |
      location /authcheck {
        internal;
        set $pep_address dummy-service-pep.test.svc.cluster.local:5566;
        proxy_pass http://$pep_address/authorize;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
      }
spec:
  rules:
  - host: "dummy-service-auth.test.demo.eoepca.org"
    http:
      paths:
      - path: /
        backend:
          serviceName: dummy-service
          servicePort: 80
  tls:
    - hosts:
        - "dummy-service-auth.test.demo.eoepca.org"
      secretName: "dummy-service-auth-tls"
---
# Source: resource-guard/charts/uma-user-agent/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "dummy-service-guard-uma-user-agent-test-connection"
  labels:
    helm.sh/chart: uma-user-agent-0.0.12
    app.kubernetes.io/name: uma-user-agent
    app.kubernetes.io/instance: dummy-service-guard
    app.kubernetes.io/version: "0.0.7"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['dummy-service-guard-uma-user-agent:80']
  restartPolicy: Never
