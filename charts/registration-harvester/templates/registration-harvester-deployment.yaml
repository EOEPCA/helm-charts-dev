apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.harvester.service.name }}
  labels:
    app.kubernetes.io/name: {{ .Values.harvester.service.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.harvester.service.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  strategy:
    type: Recreate      
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.harvester.service.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
        imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Values.harvester.service.name }}
        image: {{ .Values.harvester.image.repository }}:{{ .Values.harvester.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.harvester.image.pullPolicy }}
        env:
        - name: CONFIG_FILE_PATH
          value: {{ .Values.harvester.volume_path }}/config.yaml
        ports:
        - containerPort: {{ .Values.harvester.container_port }}
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 20
          timeoutSeconds: 2
          periodSeconds: 8
          failureThreshold: 1
        volumeMounts:
        - mountPath: {{ .Values.harvester.volume_path }}
          name: {{ .Values.harvester.volume_name }}
      restartPolicy: Always
      volumes:
      - name: {{ .Values.harvester.volume_name }}
        configMap:
          name: {{ .Values.harvester.service.name }}-configmap      
